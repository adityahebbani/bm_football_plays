{"ast":null,"code":"//// filepath: /c:/Users/Adi/Files/Projects/bm_football_plays/computer-vision-webapp/src/api/visionBackend.ts\nimport axios from'axios';// This function sends the file to the backend /api/analyze endpoint for inference\nexport const analyzeVideoBackend=async file=>{const formData=new FormData();formData.append('file',file);const response=await axios.post('/api/analyze',formData,{headers:{'Content-Type':'multipart/form-data'}});return response.data;};","map":{"version":3,"names":["axios","analyzeVideoBackend","file","formData","FormData","append","response","post","headers","data"],"sources":["C:/Users/Adi/Files/Projects/bm_football_plays/computer-vision-webapp/src/api/visionBackend.ts"],"sourcesContent":["//// filepath: /c:/Users/Adi/Files/Projects/bm_football_plays/computer-vision-webapp/src/api/visionBackend.ts\r\nimport axios from 'axios';\r\n\r\nexport interface VideoAnalysisResult {\r\n  timestamp: number;\r\n  prediction: any;\r\n}\r\n\r\n// This function sends the file to the backend /api/analyze endpoint for inference\r\nexport const analyzeVideoBackend = async (file: File): Promise<VideoAnalysisResult[]> => {\r\n  const formData = new FormData();\r\n  formData.append('file', file);\r\n\r\n  const response = await axios.post<VideoAnalysisResult[]>('/api/analyze', formData, {\r\n    headers: { 'Content-Type': 'multipart/form-data' },\r\n  });\r\n  return response.data;\r\n};"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAOzB;AACA,MAAO,MAAM,CAAAC,mBAAmB,CAAG,KAAO,CAAAC,IAAU,EAAqC,CACvF,KAAM,CAAAC,QAAQ,CAAG,GAAI,CAAAC,QAAQ,CAAC,CAAC,CAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,CAAEH,IAAI,CAAC,CAE7B,KAAM,CAAAI,QAAQ,CAAG,KAAM,CAAAN,KAAK,CAACO,IAAI,CAAwB,cAAc,CAAEJ,QAAQ,CAAE,CACjFK,OAAO,CAAE,CAAE,cAAc,CAAE,qBAAsB,CACnD,CAAC,CAAC,CACF,MAAO,CAAAF,QAAQ,CAACG,IAAI,CACtB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}