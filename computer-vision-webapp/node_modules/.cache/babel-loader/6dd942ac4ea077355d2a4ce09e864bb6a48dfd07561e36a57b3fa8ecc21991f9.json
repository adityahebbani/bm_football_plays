{"ast":null,"code":"import React,{useState,useRef,useEffect}from'react';import{analyzeVideo}from'../visionModelIntegration';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const Home=()=>{const[uploadedVideo,setUploadedVideo]=useState(null);const[analysisResults,setAnalysisResults]=useState(null);const videoRef=useRef(null);const canvasRef=useRef(null);// Handle file selection\nconst handleFileChange=async event=>{var _event$target$files;const selectedFile=(_event$target$files=event.target.files)===null||_event$target$files===void 0?void 0:_event$target$files[0];if(!selectedFile)return;// Prepare form data for upload\nconst formData=new FormData();formData.append('file',selectedFile);try{const response=await fetch('/api/upload',{method:'POST',body:formData});if(response.ok){const data=await response.json();setUploadedVideo(data);alert('File uploaded successfully!');// Only analyze if it's an MP4 video\nif(data.isVideo&&selectedFile.type==='video/mp4'){const results=await analyzeVideo(selectedFile);setAnalysisResults(results);}}else{alert('Upload failed.');}}catch(err){console.error('Error uploading file:',err);}};// Set up overlay drawing once we have analysis results and valid elements\nuseEffect(()=>{const videoEl=videoRef.current;const canvasEl=canvasRef.current;if(!videoEl||!canvasEl)return;// Do nothing if elements don’t exist\nconst context=canvasEl.getContext('2d');if(!context)return;// Resize canvas to match video dimensions once metadata is loaded\nconst handleLoadedMetadata=()=>{canvasEl.width=videoEl.videoWidth;canvasEl.height=videoEl.videoHeight;};// Draw bounding boxes when the video time updates\nconst updateOverlay=()=>{var _result$prediction;context.clearRect(0,0,canvasEl.width,canvasEl.height);const currentTime=videoEl.currentTime;if(!analysisResults)return;// Find any prediction close to the currentTime\nconst result=analysisResults.find(r=>Math.abs(r.timestamp-currentTime)<0.5);if(result&&(_result$prediction=result.prediction)!==null&&_result$prediction!==void 0&&_result$prediction.predictions){result.prediction.predictions.forEach(pred=>{// Draw bounding box and label\ncontext.strokeStyle='red';context.lineWidth=2;context.strokeRect(pred.x,pred.y,pred.width,pred.height);context.font='16px Arial';context.fillStyle='red';context.fillText(pred.label,pred.x,pred.y-5);});}};// Hook up event listeners\nvideoEl.addEventListener('loadedmetadata',handleLoadedMetadata);videoEl.addEventListener('timeupdate',updateOverlay);// Cleanup on unmount\nreturn()=>{videoEl.removeEventListener('loadedmetadata',handleLoadedMetadata);videoEl.removeEventListener('timeupdate',updateOverlay);};},[analysisResults]);return/*#__PURE__*/_jsxs(\"div\",{className:\"home-container\",style:{padding:'20px'},children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Upload and View on Home Page\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"upload-section\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"file-input\",className:\"file-upload-label\",style:{cursor:'pointer'},children:\"Choose File\"}),/*#__PURE__*/_jsx(\"input\",{id:\"file-input\",type:\"file\",accept:\"video/mp4,image/*\",onChange:handleFileChange,style:{display:'none'}})]}),uploadedVideo&&/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:'20px',position:'relative',display:'inline-block'},children:[/*#__PURE__*/_jsx(\"h3\",{children:uploadedVideo.name}),uploadedVideo.isVideo?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"video\",{ref:videoRef,width:\"400\",controls:true,children:[/*#__PURE__*/_jsx(\"source\",{src:uploadedVideo.path,type:\"video/mp4\"}),\"Your browser does not support the video tag.\"]}),/*#__PURE__*/_jsx(\"canvas\",{ref:canvasRef,style:{position:'absolute',top:0,left:0,pointerEvents:'none'}})]}):/*#__PURE__*/_jsx(\"img\",{src:uploadedVideo.path,alt:uploadedVideo.name,width:\"400\"})]})]});};export default Home;","map":{"version":3,"names":["React","useState","useRef","useEffect","analyzeVideo","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Home","uploadedVideo","setUploadedVideo","analysisResults","setAnalysisResults","videoRef","canvasRef","handleFileChange","event","_event$target$files","selectedFile","target","files","formData","FormData","append","response","fetch","method","body","ok","data","json","alert","isVideo","type","results","err","console","error","videoEl","current","canvasEl","context","getContext","handleLoadedMetadata","width","videoWidth","height","videoHeight","updateOverlay","_result$prediction","clearRect","currentTime","result","find","r","Math","abs","timestamp","prediction","predictions","forEach","pred","strokeStyle","lineWidth","strokeRect","x","y","font","fillStyle","fillText","label","addEventListener","removeEventListener","className","style","padding","children","htmlFor","cursor","id","accept","onChange","display","marginTop","position","name","ref","controls","src","path","top","left","pointerEvents","alt"],"sources":["C:/Users/Adi/Files/Projects/bm_football_plays/computer-vision-webapp/src/components/Home.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { analyzeVideo, VideoAnalysisResult } from '../visionModelIntegration';\r\n\r\ninterface VideoData {\r\n  id: string;\r\n  name: string;\r\n  path: string;\r\n  timestamp: number;\r\n  isVideo: boolean;\r\n}\r\n\r\nconst Home: React.FC = () => {\r\n  const [uploadedVideo, setUploadedVideo] = useState<VideoData | null>(null);\r\n  const [analysisResults, setAnalysisResults] = useState<VideoAnalysisResult[] | null>(null);\r\n  const videoRef = useRef<HTMLVideoElement>(null);\r\n  const canvasRef = useRef<HTMLCanvasElement>(null);\r\n\r\n  // Handle file selection\r\n  const handleFileChange = async (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const selectedFile = event.target.files?.[0];\r\n    if (!selectedFile) return;\r\n\r\n    // Prepare form data for upload\r\n    const formData = new FormData();\r\n    formData.append('file', selectedFile);\r\n\r\n    try {\r\n      const response = await fetch('/api/upload', {\r\n        method: 'POST',\r\n        body: formData,\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data: VideoData = await response.json();\r\n        setUploadedVideo(data);\r\n        alert('File uploaded successfully!');\r\n\r\n        // Only analyze if it's an MP4 video\r\n        if (data.isVideo && selectedFile.type === 'video/mp4') {\r\n          const results = await analyzeVideo(selectedFile);\r\n          setAnalysisResults(results);\r\n        }\r\n      } else {\r\n        alert('Upload failed.');\r\n      }\r\n    } catch (err) {\r\n      console.error('Error uploading file:', err);\r\n    }\r\n  };\r\n\r\n  // Set up overlay drawing once we have analysis results and valid elements\r\n  useEffect(() => {\r\n    const videoEl = videoRef.current;\r\n    const canvasEl = canvasRef.current;\r\n    if (!videoEl || !canvasEl) return; // Do nothing if elements don’t exist\r\n\r\n    const context = canvasEl.getContext('2d');\r\n    if (!context) return;\r\n\r\n    // Resize canvas to match video dimensions once metadata is loaded\r\n    const handleLoadedMetadata = () => {\r\n      canvasEl.width = videoEl.videoWidth;\r\n      canvasEl.height = videoEl.videoHeight;\r\n    };\r\n\r\n    // Draw bounding boxes when the video time updates\r\n    const updateOverlay = () => {\r\n      context.clearRect(0, 0, canvasEl.width, canvasEl.height);\r\n      const currentTime = videoEl.currentTime;\r\n\r\n      if (!analysisResults) return;\r\n\r\n      // Find any prediction close to the currentTime\r\n      const result = analysisResults.find(\r\n        (r) => Math.abs(r.timestamp - currentTime) < 0.5\r\n      );\r\n\r\n      if (result && result.prediction?.predictions) {\r\n        result.prediction.predictions.forEach((pred: any) => {\r\n          // Draw bounding box and label\r\n          context.strokeStyle = 'red';\r\n          context.lineWidth = 2;\r\n          context.strokeRect(pred.x, pred.y, pred.width, pred.height);\r\n          context.font = '16px Arial';\r\n          context.fillStyle = 'red';\r\n          context.fillText(pred.label, pred.x, pred.y - 5);\r\n        });\r\n      }\r\n    };\r\n\r\n    // Hook up event listeners\r\n    videoEl.addEventListener('loadedmetadata', handleLoadedMetadata);\r\n    videoEl.addEventListener('timeupdate', updateOverlay);\r\n\r\n    // Cleanup on unmount\r\n    return () => {\r\n      videoEl.removeEventListener('loadedmetadata', handleLoadedMetadata);\r\n      videoEl.removeEventListener('timeupdate', updateOverlay);\r\n    };\r\n  }, [analysisResults]);\r\n\r\n  return (\r\n    <div className=\"home-container\" style={{ padding: '20px' }}>\r\n      <h2>Upload and View on Home Page</h2>\r\n      <div className=\"upload-section\">\r\n        <label htmlFor=\"file-input\" className=\"file-upload-label\" style={{ cursor: 'pointer' }}>\r\n          Choose File\r\n        </label>\r\n        <input\r\n          id=\"file-input\"\r\n          type=\"file\"\r\n          accept=\"video/mp4,image/*\"\r\n          onChange={handleFileChange}\r\n          style={{ display: 'none' }}\r\n        />\r\n      </div>\r\n\r\n      {/* Display the video (with overlay) or image if one is uploaded */}\r\n      {uploadedVideo && (\r\n        <div style={{ marginTop: '20px', position: 'relative', display: 'inline-block' }}>\r\n          <h3>{uploadedVideo.name}</h3>\r\n          {uploadedVideo.isVideo ? (\r\n            <>\r\n              <video ref={videoRef} width=\"400\" controls>\r\n                <source src={uploadedVideo.path} type=\"video/mp4\" />\r\n                Your browser does not support the video tag.\r\n              </video>\r\n              {/* Canvas overlay for bounding boxes */}\r\n              <canvas\r\n                ref={canvasRef}\r\n                style={{\r\n                  position: 'absolute',\r\n                  top: 0,\r\n                  left: 0,\r\n                  pointerEvents: 'none',\r\n                }}\r\n              />\r\n            </>\r\n          ) : (\r\n            <img src={uploadedVideo.path} alt={uploadedVideo.name} width=\"400\" />\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}