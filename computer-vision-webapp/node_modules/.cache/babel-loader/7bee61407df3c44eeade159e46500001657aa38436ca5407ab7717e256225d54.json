{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adi\\\\Files\\\\Projects\\\\bm_football_plays\\\\computer-vision-webapp\\\\src\\\\components\\\\Home.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { analyzeVideo } from '../visionModelIntegration';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [uploadedVideo, setUploadedVideo] = useState(null);\n  const [analysisResults, setAnalysisResults] = useState(null);\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const handleFileChange = async event => {\n    var _event$target$files;\n    const selectedFile = (_event$target$files = event.target.files) === null || _event$target$files === void 0 ? void 0 : _event$target$files[0];\n    if (selectedFile) {\n      const formData = new FormData();\n      formData.append('file', selectedFile);\n      try {\n        const response = await fetch('/api/upload', {\n          method: 'POST',\n          body: formData\n        });\n        if (response.ok) {\n          const data = await response.json();\n          setUploadedVideo(data);\n          alert('File uploaded successfully!');\n\n          // If the uploaded file is a video (and an mp4), trigger analysis.\n          if (data.isVideo && selectedFile.type === 'video/mp4') {\n            const results = await analyzeVideo(selectedFile);\n            setAnalysisResults(results);\n          }\n        } else {\n          alert('Upload failed.');\n        }\n      } catch (err) {\n        console.error('Error uploading file:', err);\n      }\n    }\n  };\n  useEffect(() => {\n    // Ensure video and canvas elements exist before setting up listeners.\n    const videoEl = videoRef.current;\n    const canvasEl = canvasRef.current;\n    if (!videoEl || !canvasEl) return;\n    const context = canvasEl.getContext('2d');\n    if (!context) return;\n\n    // Update overlay is called on each video time update.\n    const updateOverlay = () => {\n      // Clear previous drawings.\n      context.clearRect(0, 0, canvasEl.width, canvasEl.height);\n      const currentTime = videoEl.currentTime;\n      if (analysisResults) {\n        // Find a prediction near the current time (using a threshold of 0.5 seconds).\n        const result = analysisResults.find(res => Math.abs(res.timestamp - currentTime) < 0.5);\n        if (result && result.prediction && result.prediction.predictions) {\n          result.prediction.predictions.forEach(pred => {\n            // Draw bounding box and label. Ensure pred contains x, y, width, height, and label.\n            context.strokeStyle = 'red';\n            context.lineWidth = 2;\n            context.strokeRect(pred.x, pred.y, pred.width, pred.height);\n            context.font = '16px Arial';\n            context.fillStyle = 'red';\n            context.fillText(pred.label, pred.x, pred.y - 5);\n          });\n        }\n      }\n    };\n\n    // Set canvas dimensions once the video metadata is loaded.\n    const handleLoadedMetadata = () => {\n      canvasEl.width = videoEl.videoWidth;\n      canvasEl.height = videoEl.videoHeight;\n    };\n    videoEl.addEventListener('timeupdate', updateOverlay);\n    videoEl.addEventListener('loadedmetadata', handleLoadedMetadata);\n    return () => {\n      videoEl.removeEventListener('timeupdate', updateOverlay);\n      videoEl.removeEventListener('loadedmetadata', handleLoadedMetadata);\n    };\n  }, [analysisResults]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload and View on Home Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"file-input\",\n        className: \"file-upload-label\",\n        children: \"Choose File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"file-input\",\n        type: \"file\",\n        accept: \"image/*,video/*\",\n        onChange: handleFileChange,\n        className: \"hidden-file-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), uploadedVideo && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px',\n        position: 'relative',\n        display: 'inline-block'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: uploadedVideo.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this), uploadedVideo.isVideo ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          ref: videoRef,\n          width: \"400\",\n          controls: true,\n          children: [/*#__PURE__*/_jsxDEV(\"source\", {\n            src: uploadedVideo.path,\n            type: \"video/mp4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 17\n          }, this), \"Your browser does not support the video tag.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: canvasRef,\n          style: {\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            pointerEvents: 'none'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"img\", {\n        src: uploadedVideo.path,\n        alt: uploadedVideo.name,\n        width: \"400\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"Tx0/NfcRVBTmvwfpz0nxXl8EQlo=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useRef","useEffect","analyzeVideo","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","_s","uploadedVideo","setUploadedVideo","analysisResults","setAnalysisResults","videoRef","canvasRef","handleFileChange","event","_event$target$files","selectedFile","target","files","formData","FormData","append","response","fetch","method","body","ok","data","json","alert","isVideo","type","results","err","console","error","videoEl","current","canvasEl","context","getContext","updateOverlay","clearRect","width","height","currentTime","result","find","res","Math","abs","timestamp","prediction","predictions","forEach","pred","strokeStyle","lineWidth","strokeRect","x","y","font","fillStyle","fillText","label","handleLoadedMetadata","videoWidth","videoHeight","addEventListener","removeEventListener","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","accept","onChange","style","marginTop","position","display","name","ref","controls","src","path","top","left","pointerEvents","alt","_c","$RefreshReg$"],"sources":["C:/Users/Adi/Files/Projects/bm_football_plays/computer-vision-webapp/src/components/Home.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { analyzeVideo, VideoAnalysisResult } from '../visionModelIntegration';\r\n\r\ninterface VideoData {\r\n  id: string;\r\n  name: string;\r\n  path: string;\r\n  timestamp: number;\r\n  isVideo: boolean;\r\n}\r\n\r\nconst Home: React.FC = () => {\r\n  const [uploadedVideo, setUploadedVideo] = useState<VideoData | null>(null);\r\n  const [analysisResults, setAnalysisResults] = useState<VideoAnalysisResult[] | null>(null);\r\n  const videoRef = useRef<HTMLVideoElement>(null);\r\n  const canvasRef = useRef<HTMLCanvasElement>(null);\r\n\r\n  const handleFileChange = async (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const selectedFile = event.target.files?.[0];\r\n    if (selectedFile) {\r\n      const formData = new FormData();\r\n      formData.append('file', selectedFile);\r\n\r\n      try {\r\n        const response = await fetch('/api/upload', {\r\n          method: 'POST',\r\n          body: formData,\r\n        });\r\n\r\n        if (response.ok) {\r\n          const data: VideoData = await response.json();\r\n          setUploadedVideo(data);\r\n          alert('File uploaded successfully!');\r\n\r\n          // If the uploaded file is a video (and an mp4), trigger analysis.\r\n          if (data.isVideo && selectedFile.type === 'video/mp4') {\r\n            const results = await analyzeVideo(selectedFile);\r\n            setAnalysisResults(results);\r\n          }\r\n        } else {\r\n          alert('Upload failed.');\r\n        }\r\n      } catch (err) {\r\n        console.error('Error uploading file:', err);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Ensure video and canvas elements exist before setting up listeners.\r\n    const videoEl = videoRef.current;\r\n    const canvasEl = canvasRef.current;\r\n    if (!videoEl || !canvasEl) return;\r\n\r\n    const context = canvasEl.getContext('2d');\r\n    if (!context) return;\r\n\r\n    // Update overlay is called on each video time update.\r\n    const updateOverlay = () => {\r\n      // Clear previous drawings.\r\n      context.clearRect(0, 0, canvasEl.width, canvasEl.height);\r\n      const currentTime = videoEl.currentTime;\r\n  \r\n      if (analysisResults) {\r\n        // Find a prediction near the current time (using a threshold of 0.5 seconds).\r\n        const result = analysisResults.find(res => Math.abs(res.timestamp - currentTime) < 0.5);\r\n        if (result && result.prediction && result.prediction.predictions) {\r\n          result.prediction.predictions.forEach((pred: any) => {\r\n            // Draw bounding box and label. Ensure pred contains x, y, width, height, and label.\r\n            context.strokeStyle = 'red';\r\n            context.lineWidth = 2;\r\n            context.strokeRect(pred.x, pred.y, pred.width, pred.height);\r\n            context.font = '16px Arial';\r\n            context.fillStyle = 'red';\r\n            context.fillText(pred.label, pred.x, pred.y - 5);\r\n          });\r\n        }\r\n      }\r\n    };\r\n\r\n    // Set canvas dimensions once the video metadata is loaded.\r\n    const handleLoadedMetadata = () => {\r\n      canvasEl.width = videoEl.videoWidth;\r\n      canvasEl.height = videoEl.videoHeight;\r\n    };\r\n\r\n    videoEl.addEventListener('timeupdate', updateOverlay);\r\n    videoEl.addEventListener('loadedmetadata', handleLoadedMetadata);\r\n\r\n    return () => {\r\n      videoEl.removeEventListener('timeupdate', updateOverlay);\r\n      videoEl.removeEventListener('loadedmetadata', handleLoadedMetadata);\r\n    };\r\n  }, [analysisResults]);\r\n\r\n  return (\r\n    <div className=\"home-container\">\r\n      <h2>Upload and View on Home Page</h2>\r\n      <div className=\"upload-section\">\r\n        <label htmlFor=\"file-input\" className=\"file-upload-label\">\r\n          Choose File\r\n        </label>\r\n        <input\r\n          id=\"file-input\"\r\n          type=\"file\"\r\n          accept=\"image/*,video/*\"\r\n          onChange={handleFileChange}\r\n          className=\"hidden-file-input\"\r\n        />\r\n      </div>\r\n      \r\n      {/* Display the video (with overlay) or image */}\r\n      {uploadedVideo && (\r\n        <div style={{ marginTop: '20px', position: 'relative', display: 'inline-block' }}>\r\n          <h3>{uploadedVideo.name}</h3>\r\n          {uploadedVideo.isVideo ? (\r\n            <>\r\n              <video ref={videoRef} width=\"400\" controls>\r\n                <source src={uploadedVideo.path} type=\"video/mp4\" />\r\n                Your browser does not support the video tag.\r\n              </video>\r\n              {/* Canvas overlay for bounding boxes */}\r\n              <canvas\r\n                ref={canvasRef}\r\n                style={{\r\n                  position: 'absolute',\r\n                  top: 0,\r\n                  left: 0,\r\n                  pointerEvents: 'none'\r\n                }}\r\n              />\r\n            </>\r\n          ) : (\r\n            <img src={uploadedVideo.path} alt={uploadedVideo.name} width=\"400\" />\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}