{"ast":null,"code":"var _jsxFileName = \"/Users/adity/Files/bm_front/computer-vision-webapp/src/components/Library.tsx\",\n  _s = $RefreshSig$();\n// filepath: /Users/adity/Files/bm_front/computer-vision-webapp/src/components/Library.tsx\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Preloaded static videos in /public/videos.\n// You can add as many as you want here.\nconst PRELOADED_VIDEOS = [{\n  id: 'pre-1',\n  name: 'Preloaded Video 1',\n  dataUrl: '/videos/preloaded1.mp4',\n  // path in /public\n  timestamp: 1,\n  // older timestamps so user uploads appear above\n  isVideo: true\n}, {\n  id: 'pre-2',\n  name: 'Preloaded Video 2',\n  dataUrl: '/videos/preloaded2.mp4',\n  timestamp: 2,\n  isVideo: true\n}];\nconst Library = () => {\n  _s();\n  const [videos, setVideos] = useState([]);\n  useEffect(() => {\n    const stored = localStorage.getItem('uploadedVideos');\n    if (!stored) {\n      // If no uploaded videos exist yet, seed localStorage with the preloaded ones\n      localStorage.setItem('uploadedVideos', JSON.stringify(PRELOADED_VIDEOS));\n      setVideos(PRELOADED_VIDEOS);\n    } else {\n      // Merge user uploads with preloaded items (if not already merged)\n      const parsed = JSON.parse(stored);\n      const merged = mergePreloadedAndStored(parsed);\n      // Sort newest first\n      merged.sort((a, b) => b.timestamp - a.timestamp);\n\n      // In case preloaded were not already merged, store them\n      localStorage.setItem('uploadedVideos', JSON.stringify(merged));\n      setVideos(merged);\n    }\n  }, []);\n\n  // Helper to ensure preloaded items are merged only once\n  function mergePreloadedAndStored(storedVideos) {\n    const existingIds = new Set(storedVideos.map(v => v.id));\n    const merged = [...storedVideos];\n    PRELOADED_VIDEOS.forEach(preVid => {\n      if (!existingIds.has(preVid.id)) {\n        merged.push(preVid);\n      }\n    });\n    return merged;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Video Library\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"This page displays preloaded and user-uploaded videos in a blog-like format (newest first).\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), videos.map(vid => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '2rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: vid.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this), vid.isVideo ? /*#__PURE__*/_jsxDEV(\"video\", {\n        controls: true,\n        width: \"600\",\n        children: [/*#__PURE__*/_jsxDEV(\"source\", {\n          src: vid.dataUrl,\n          type: \"video/mp4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 29\n        }, this), \"Your browser does not support the video tag.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n        src: vid.dataUrl,\n        alt: vid.name,\n        width: \"600\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 25\n      }, this)]\n    }, vid.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n_s(Library, \"39g9r2hk3cJXA16k+db4Z3Rqykw=\");\n_c = Library;\nexport default Library;\nvar _c;\n$RefreshReg$(_c, \"Library\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","PRELOADED_VIDEOS","id","name","dataUrl","timestamp","isVideo","Library","_s","videos","setVideos","stored","localStorage","getItem","setItem","JSON","stringify","parsed","parse","merged","mergePreloadedAndStored","sort","a","b","storedVideos","existingIds","Set","map","v","forEach","preVid","has","push","className","children","fileName","_jsxFileName","lineNumber","columnNumber","vid","style","marginBottom","controls","width","src","type","alt","_c","$RefreshReg$"],"sources":["/Users/adity/Files/bm_front/computer-vision-webapp/src/components/Library.tsx"],"sourcesContent":["// filepath: /Users/adity/Files/bm_front/computer-vision-webapp/src/components/Library.tsx\nimport React, { useEffect, useState } from 'react';\n\ninterface StoredVideo {\n    id: string;\n    name: string;\n    dataUrl: string;   // either base64 or a public URL\n    timestamp: number;\n    isVideo: boolean;\n}\n\n// Preloaded static videos in /public/videos.\n// You can add as many as you want here.\nconst PRELOADED_VIDEOS: StoredVideo[] = [\n    {\n        id: 'pre-1',\n        name: 'Preloaded Video 1',\n        dataUrl: '/videos/preloaded1.mp4',   // path in /public\n        timestamp: 1,                        // older timestamps so user uploads appear above\n        isVideo: true,\n    },\n    {\n        id: 'pre-2',\n        name: 'Preloaded Video 2',\n        dataUrl: '/videos/preloaded2.mp4',\n        timestamp: 2,\n        isVideo: true,\n    },\n];\n\nconst Library: React.FC = () => {\n    const [videos, setVideos] = useState<StoredVideo[]>([]);\n\n    useEffect(() => {\n        const stored = localStorage.getItem('uploadedVideos');\n        if (!stored) {\n            // If no uploaded videos exist yet, seed localStorage with the preloaded ones\n            localStorage.setItem('uploadedVideos', JSON.stringify(PRELOADED_VIDEOS));\n            setVideos(PRELOADED_VIDEOS);\n        } else {\n            // Merge user uploads with preloaded items (if not already merged)\n            const parsed = JSON.parse(stored) as StoredVideo[];\n            const merged = mergePreloadedAndStored(parsed);\n            // Sort newest first\n            merged.sort((a, b) => b.timestamp - a.timestamp);\n\n            // In case preloaded were not already merged, store them\n            localStorage.setItem('uploadedVideos', JSON.stringify(merged));\n            setVideos(merged);\n        }\n    }, []);\n\n    // Helper to ensure preloaded items are merged only once\n    function mergePreloadedAndStored(storedVideos: StoredVideo[]): StoredVideo[] {\n        const existingIds = new Set(storedVideos.map(v => v.id));\n        const merged = [...storedVideos];\n\n        PRELOADED_VIDEOS.forEach(preVid => {\n            if (!existingIds.has(preVid.id)) {\n                merged.push(preVid);\n            }\n        });\n        return merged;\n    }\n\n    return (\n        <div className=\"home-container\">\n            <h2>Video Library</h2>\n            <p>This page displays preloaded and user-uploaded videos in a blog-like format (newest first).</p>\n\n            {videos.map((vid) => (\n                <div key={vid.id} style={{ marginBottom: '2rem' }}>\n                    <h3>{vid.name}</h3>\n                    {vid.isVideo ? (\n                        <video controls width=\"600\">\n                            <source src={vid.dataUrl} type=\"video/mp4\" />\n                            Your browser does not support the video tag.\n                        </video>\n                    ) : (\n                        <img src={vid.dataUrl} alt={vid.name} width=\"600\" />\n                    )}\n                </div>\n            ))}\n        </div>\n    );\n};\n\nexport default Library;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}