{"ast":null,"code":"//// filepath: /c:/Users/Adi/Files/Projects/bm_football_plays/computer-vision-webapp/src/api/visionBackend.ts\nimport axios from 'axios';\n// This function sends the file to the backend /api/analyze endpoint for inference\nexport const analyzeVideoBackend = async file => {\n  const formData = new FormData();\n  formData.append('file', file);\n  const response = await axios.post('/api/analyze', formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  });\n  return response.data;\n};","map":{"version":3,"names":["axios","analyzeVideoBackend","file","formData","FormData","append","response","post","headers","data"],"sources":["C:/Users/Adi/Files/Projects/bm_football_plays/computer-vision-webapp/src/api/visionBackend.ts"],"sourcesContent":["//// filepath: /c:/Users/Adi/Files/Projects/bm_football_plays/computer-vision-webapp/src/api/visionBackend.ts\r\nimport axios from 'axios';\r\n\r\nexport interface VideoAnalysisResult {\r\n  timestamp: number;\r\n  prediction: any;\r\n}\r\n\r\n// This function sends the file to the backend /api/analyze endpoint for inference\r\nexport const analyzeVideoBackend = async (file: File): Promise<VideoAnalysisResult[]> => {\r\n  const formData = new FormData();\r\n  formData.append('file', file);\r\n\r\n  const response = await axios.post<VideoAnalysisResult[]>('/api/analyze', formData, {\r\n    headers: { 'Content-Type': 'multipart/form-data' },\r\n  });\r\n  return response.data;\r\n};"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAOzB;AACA,OAAO,MAAMC,mBAAmB,GAAG,MAAOC,IAAU,IAAqC;EACvF,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEH,IAAI,CAAC;EAE7B,MAAMI,QAAQ,GAAG,MAAMN,KAAK,CAACO,IAAI,CAAwB,cAAc,EAAEJ,QAAQ,EAAE;IACjFK,OAAO,EAAE;MAAE,cAAc,EAAE;IAAsB;EACnD,CAAC,CAAC;EACF,OAAOF,QAAQ,CAACG,IAAI;AACtB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}