{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adi\\\\Files\\\\Projects\\\\bm_football_plays\\\\computer-vision-webapp\\\\src\\\\components\\\\Home.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { analyzeVideo } from '../visionModelIntegration';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [uploadedVideo, setUploadedVideo] = useState(null);\n  const [analysisResults, setAnalysisResults] = useState(null);\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n\n  // Handle file selection\n  const handleFileChange = async event => {\n    var _event$target$files;\n    const selectedFile = (_event$target$files = event.target.files) === null || _event$target$files === void 0 ? void 0 : _event$target$files[0];\n    if (!selectedFile) return;\n\n    // Prepare form data for upload\n    const formData = new FormData();\n    formData.append('file', selectedFile);\n    try {\n      const response = await fetch('/api/upload', {\n        method: 'POST',\n        body: formData\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setUploadedVideo(data);\n        alert('File uploaded successfully!');\n\n        // Only analyze if it's an MP4 video\n        if (data.isVideo && selectedFile.type === 'video/mp4') {\n          const results = await analyzeVideo(selectedFile);\n          setAnalysisResults(results);\n        }\n      } else {\n        alert('Upload failed.');\n      }\n    } catch (err) {\n      console.error('Error uploading file:', err);\n    }\n  };\n\n  // Set up overlay drawing once we have analysis results and valid elements\n  useEffect(() => {\n    const videoEl = videoRef.current;\n    const canvasEl = canvasRef.current;\n    if (!videoEl || !canvasEl) return; // Do nothing if elements don’t exist\n\n    const context = canvasEl.getContext('2d');\n    if (!context) return;\n\n    // Resize canvas to match video dimensions once metadata is loaded\n    const handleLoadedMetadata = () => {\n      canvasEl.width = videoEl.videoWidth;\n      canvasEl.height = videoEl.videoHeight;\n    };\n\n    // Draw bounding boxes when the video time updates\n    const updateOverlay = () => {\n      var _result$prediction;\n      context.clearRect(0, 0, canvasEl.width, canvasEl.height);\n      const currentTime = videoEl.currentTime;\n      if (!analysisResults) return;\n\n      // Find any prediction close to the currentTime\n      const result = analysisResults.find(r => Math.abs(r.timestamp - currentTime) < 0.5);\n      if (result && (_result$prediction = result.prediction) !== null && _result$prediction !== void 0 && _result$prediction.predictions) {\n        result.prediction.predictions.forEach(pred => {\n          // Draw bounding box and label\n          context.strokeStyle = 'red';\n          context.lineWidth = 2;\n          context.strokeRect(pred.x, pred.y, pred.width, pred.height);\n          context.font = '16px Arial';\n          context.fillStyle = 'red';\n          context.fillText(pred.label, pred.x, pred.y - 5);\n        });\n      }\n    };\n\n    // Hook up event listeners\n    videoEl.addEventListener('loadedmetadata', handleLoadedMetadata);\n    videoEl.addEventListener('timeupdate', updateOverlay);\n\n    // Cleanup on unmount\n    return () => {\n      videoEl.removeEventListener('loadedmetadata', handleLoadedMetadata);\n      videoEl.removeEventListener('timeupdate', updateOverlay);\n    };\n  }, [analysisResults]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-container\",\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload and View on Home Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"file-input\",\n        className: \"file-upload-label\",\n        style: {\n          cursor: 'pointer'\n        },\n        children: \"Choose File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"file-input\",\n        type: \"file\",\n        accept: \"video/mp4,image/*\",\n        onChange: handleFileChange,\n        style: {\n          display: 'none'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), uploadedVideo && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px',\n        position: 'relative',\n        display: 'inline-block'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: uploadedVideo.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this), uploadedVideo.isVideo ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          ref: videoRef,\n          width: \"400\",\n          controls: true,\n          children: [/*#__PURE__*/_jsxDEV(\"source\", {\n            src: uploadedVideo.path,\n            type: \"video/mp4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 17\n          }, this), \"Your browser does not support the video tag.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: canvasRef,\n          style: {\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            pointerEvents: 'none'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"img\", {\n        src: uploadedVideo.path,\n        alt: uploadedVideo.name,\n        width: \"400\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"Tx0/NfcRVBTmvwfpz0nxXl8EQlo=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useRef","useEffect","analyzeVideo","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","_s","uploadedVideo","setUploadedVideo","analysisResults","setAnalysisResults","videoRef","canvasRef","handleFileChange","event","_event$target$files","selectedFile","target","files","formData","FormData","append","response","fetch","method","body","ok","data","json","alert","isVideo","type","results","err","console","error","videoEl","current","canvasEl","context","getContext","handleLoadedMetadata","width","videoWidth","height","videoHeight","updateOverlay","_result$prediction","clearRect","currentTime","result","find","r","Math","abs","timestamp","prediction","predictions","forEach","pred","strokeStyle","lineWidth","strokeRect","x","y","font","fillStyle","fillText","label","addEventListener","removeEventListener","className","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","cursor","id","accept","onChange","display","marginTop","position","name","ref","controls","src","path","top","left","pointerEvents","alt","_c","$RefreshReg$"],"sources":["C:/Users/Adi/Files/Projects/bm_football_plays/computer-vision-webapp/src/components/Home.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { analyzeVideo, VideoAnalysisResult } from '../visionModelIntegration';\r\n\r\ninterface VideoData {\r\n  id: string;\r\n  name: string;\r\n  path: string;\r\n  timestamp: number;\r\n  isVideo: boolean;\r\n}\r\n\r\nconst Home: React.FC = () => {\r\n  const [uploadedVideo, setUploadedVideo] = useState<VideoData | null>(null);\r\n  const [analysisResults, setAnalysisResults] = useState<VideoAnalysisResult[] | null>(null);\r\n  const videoRef = useRef<HTMLVideoElement>(null);\r\n  const canvasRef = useRef<HTMLCanvasElement>(null);\r\n\r\n  // Handle file selection\r\n  const handleFileChange = async (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const selectedFile = event.target.files?.[0];\r\n    if (!selectedFile) return;\r\n\r\n    // Prepare form data for upload\r\n    const formData = new FormData();\r\n    formData.append('file', selectedFile);\r\n\r\n    try {\r\n      const response = await fetch('/api/upload', {\r\n        method: 'POST',\r\n        body: formData,\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data: VideoData = await response.json();\r\n        setUploadedVideo(data);\r\n        alert('File uploaded successfully!');\r\n\r\n        // Only analyze if it's an MP4 video\r\n        if (data.isVideo && selectedFile.type === 'video/mp4') {\r\n          const results = await analyzeVideo(selectedFile);\r\n          setAnalysisResults(results);\r\n        }\r\n      } else {\r\n        alert('Upload failed.');\r\n      }\r\n    } catch (err) {\r\n      console.error('Error uploading file:', err);\r\n    }\r\n  };\r\n\r\n  // Set up overlay drawing once we have analysis results and valid elements\r\n  useEffect(() => {\r\n    const videoEl = videoRef.current;\r\n    const canvasEl = canvasRef.current;\r\n    if (!videoEl || !canvasEl) return; // Do nothing if elements don’t exist\r\n\r\n    const context = canvasEl.getContext('2d');\r\n    if (!context) return;\r\n\r\n    // Resize canvas to match video dimensions once metadata is loaded\r\n    const handleLoadedMetadata = () => {\r\n      canvasEl.width = videoEl.videoWidth;\r\n      canvasEl.height = videoEl.videoHeight;\r\n    };\r\n\r\n    // Draw bounding boxes when the video time updates\r\n    const updateOverlay = () => {\r\n      context.clearRect(0, 0, canvasEl.width, canvasEl.height);\r\n      const currentTime = videoEl.currentTime;\r\n\r\n      if (!analysisResults) return;\r\n\r\n      // Find any prediction close to the currentTime\r\n      const result = analysisResults.find(\r\n        (r) => Math.abs(r.timestamp - currentTime) < 0.5\r\n      );\r\n\r\n      if (result && result.prediction?.predictions) {\r\n        result.prediction.predictions.forEach((pred: any) => {\r\n          // Draw bounding box and label\r\n          context.strokeStyle = 'red';\r\n          context.lineWidth = 2;\r\n          context.strokeRect(pred.x, pred.y, pred.width, pred.height);\r\n          context.font = '16px Arial';\r\n          context.fillStyle = 'red';\r\n          context.fillText(pred.label, pred.x, pred.y - 5);\r\n        });\r\n      }\r\n    };\r\n\r\n    // Hook up event listeners\r\n    videoEl.addEventListener('loadedmetadata', handleLoadedMetadata);\r\n    videoEl.addEventListener('timeupdate', updateOverlay);\r\n\r\n    // Cleanup on unmount\r\n    return () => {\r\n      videoEl.removeEventListener('loadedmetadata', handleLoadedMetadata);\r\n      videoEl.removeEventListener('timeupdate', updateOverlay);\r\n    };\r\n  }, [analysisResults]);\r\n\r\n  return (\r\n    <div className=\"home-container\" style={{ padding: '20px' }}>\r\n      <h2>Upload and View on Home Page</h2>\r\n      <div className=\"upload-section\">\r\n        <label htmlFor=\"file-input\" className=\"file-upload-label\" style={{ cursor: 'pointer' }}>\r\n          Choose File\r\n        </label>\r\n        <input\r\n          id=\"file-input\"\r\n          type=\"file\"\r\n          accept=\"video/mp4,image/*\"\r\n          onChange={handleFileChange}\r\n          style={{ display: 'none' }}\r\n        />\r\n      </div>\r\n\r\n      {/* Display the video (with overlay) or image if one is uploaded */}\r\n      {uploadedVideo && (\r\n        <div style={{ marginTop: '20px', position: 'relative', display: 'inline-block' }}>\r\n          <h3>{uploadedVideo.name}</h3>\r\n          {uploadedVideo.isVideo ? (\r\n            <>\r\n              <video ref={videoRef} width=\"400\" controls>\r\n                <source src={uploadedVideo.path} type=\"video/mp4\" />\r\n                Your browser does not support the video tag.\r\n              </video>\r\n              {/* Canvas overlay for bounding boxes */}\r\n              <canvas\r\n                ref={canvasRef}\r\n                style={{\r\n                  position: 'absolute',\r\n                  top: 0,\r\n                  left: 0,\r\n                  pointerEvents: 'none',\r\n                }}\r\n              />\r\n            </>\r\n          ) : (\r\n            <img src={uploadedVideo.path} alt={uploadedVideo.name} width=\"400\" />\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}